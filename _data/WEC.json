{"WEC.csv":[{"venue":"WEC","id":"4de5ff2f4f39c8d1aaa5b9b3445d8c47d01b9da7","venue_1":"WEC","year":"2005","title":"Genetic Algorithms in Hot Steel Rolling for Scale Defect Prediction","authors":"Jarno Haapamäki, Juha Röning","author_ids":"2017863, 3213064","abstract":"rolling. The modelling of such defects is problematic and their causes are not straightforward. In this study, we investigated genetic algorithms in search for a mathematical solution to scale formation. For this research, a high-dimensional data set from hot steel rolling process was gathered. The synchronisation of the variables as well as the allocation of the measurements made on the steel strip were solved before the modelling phase.","cites":"0","conferencePercentile":"21.80851064"},{"venue":"WEC","id":"456c776497bec571601808fbd2c8974543d1055d","venue_1":"WEC","year":"2005","title":"DJess - A Knowledge-Sharing Middleware to Deploy Distributed Inference Systems","authors":"Federico Cabitza, Bernardo Dal Seno","author_ids":"3037324, 8581427","abstract":"— In this paper DJess is presented, a novel distributed production system that provides an infrastructure for factual and procedural knowledge sharing. DJess is a Java package that provides programmers with a lightweight middleware by which inference systems implemented in Jess and running on different nodes of a network can communicate. Communication and coordination among inference systems (agents) is achieved through the ability of each agent to transparently and asynchronously reason on inferred knowledge (facts) that might be collected and asserted by other agents on the basis of inference code (rules) that might be either local or transmitted by any node to any other node.","cites":"4","conferencePercentile":"76.59574468"},{"venue":"WEC","id":"6d57b656cf10dabf2a5227d68e15f075e873f7eb","venue_1":"WEC","year":"2005","title":"Web Log Mining by an Improved AprioriAll Algorithm","authors":"Tong Wang, Pi-lian He","author_ids":"1695404, 3295679","abstract":"about applying Data Mining in Web logs mining and shows some problems in the conventional searching engines. Then it offers an improved algorithm based on the original AprioriAll algorithm which has been used in Web logs mining widely. The new algorithm adds the property of the UserID during the every step of producing the candidate set and every step of scanning the database by which to decide whether an item in the candidate set should be put into the large set which will be used to produce next candidate set. At the meantime, in order to reduce the number of the database scanning, the new algorithm, by using the property of the Apriori algorithm, limits the size of the candidate set in time whenever it is produced. Test results show the improved algorithm has a more lower complexity of time and space, better restrain noise and fit the capacity of memory.","cites":"12","conferencePercentile":"95.74468085"}]}