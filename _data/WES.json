{"WES.csv":[{"venue":"WES","id":"06cb7b677a58f0d2a28dead9541134d647f9ec09","venue_1":"WES","year":"2002","title":"Importing the Semantic Web in UDDI","authors":"Massimo Paolucci, Takahiro Kawamura, Terry R. Payne, Katia P. Sycara","author_ids":"2949302, 1689972, 1740601, 1739874","abstract":"The web is moving from being a collection of pages toward a collection of services that interoperate through the Internet. A fundamental step toward this interoperation is the ability of automatically locating services on the bases of the functionalities that they provide. Such a functionality would allow services to locate each other and automatically interoperate. Location of web services is inherently a semantic problem, because it has to abstract from the superficial differences between representations of the services provided, and the services requested to recognize semantic similarities between the two. Current Web Services technology based on UDDI and WSDL does not make any use of semantic information and therefore fails to address the problem of matching between capabilities of services and allowing service location on the bases of what functionalities are sought, failing therefore to address the problem of locating web services. Nevertheless, previous work within DAML-S, a DAML-based language for service description, shows how ontological information collected through the semantic web can be used to match service capabilities. This work expands on previous work by showing how DAML-S Service Profiles, that describe service capabilities within DAML-S, can be mapped into UDDI records providing therefore a way to record semantic information within UDDI records. Furthermore we show how this encoded information can be used within the UDDI registry to perform semantic matching.","cites":"192","conferencePercentile":"100"},{"venue":"WES","id":"1ad8e3e92da8a32483ffb627d57a6860dcad4962","venue_1":"WES","year":"2002","title":"Processing Schedules Using Distributed Ontologies on the Semantic Web","authors":"Terry R. Payne, Rahul Singh, Katia P. Sycara","author_ids":"1740601, 2549072, 1739874","abstract":"The Semantic Web uses formal distributed ontologies for representing relationships among concepts in the real world. A structured framework such as this allows agents to peruse and reason about published knowledge without the need for scrapers, information agents, and centralized ontologies. However, in order to process any information, an agent must be familiar with the underlying ontology used to markup that information. However, no single agent can be expected to be familiar with all possible ontologies that may be available on the Semantic Web. Therefore, translation services that transform concepts defined within previously unknown ontologies into known concepts allow agents to understand the available information and hence achieve their goal. This transformation may be achieved by invoking specific markup translation services or by logical reasoning through other shared ontologies. The RETSINA Calendar Agent (RCal) is a Distributed Meeting Scheduling Agent that processes schedules marked up on the Semantic Web, and imports them into the user's Personal Information Manager. Translation services, which are used to translate unknown concepts into known concepts, which are located using a DAML-S based service discovery mechanisms. In this paper, we present RCal, and demonstrate how it extracts and uses meaningful knowledge from the semantic markup. In addition, we describe how web-service discovery mechanisms are used when new concepts are encountered.","cites":"3","conferencePercentile":"28.57142857"},{"venue":"WES","id":"235e88c305660d29e759f45e94800ad92cb0c61f","venue_1":"WES","year":"2003","title":"A Foundational Vision of e-Services","authors":"Daniela Berardi, Diego Calvanese, Giuseppe De Giacomo, Maurizio Lenzerini, Massimo Mecella","author_ids":"2754454, 1733846, 1719219, 1729232, 1732710","abstract":"In this paper we propose a foundational vision of e-Services, in which we distinguish between the external behavior of an e-Service as seen by clients, and the internal behavior as seen by a deployed application running the e-Service. Such behaviors are formally expressed as execution trees describing the interactions of the e-Service with its client and with other e-Services. Using these notions we formally define e-Service composition in a general way, without relying on any specific representation formalism. We have also provide a classification of e-Services based on relevant properties of the execution trees.","cites":"20","conferencePercentile":"100"}]}