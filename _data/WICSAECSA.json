{"WICSAECSA.csv":[{"venue":"WICSA/ECSA","id":"13cc91231204edda1466cf6c93c0b2460d8e45c5","venue_1":"WICSA/ECSA","year":"2012","title":"Understanding the Context of Architecture Evaluation Methods","authors":"Leonard J. Bass, Robert L. Nord","author_ids":"2040359, 2715685","abstract":"—This paper analyzes several industrial software architecture evaluation methods from the perspective of their contextual elements. Contextual elements include the time available for the evaluation, the personnel available, the openness of the results, the involvement of stakeholders, and so forth. The goal of this analysis is to inform managers and technical personnel about the possibilities for an architecture evaluation method given their particular context.","cites":"4","conferencePercentile":"54"},{"venue":"WICSA/ECSA","id":"e46922f82d8fedf1d41d8d7cb3a04259f7ff3b60","venue_1":"WICSA/ECSA","year":"2009","title":"An architecting method for distributed process-intensive systems","authors":"Xiwei Xu, Liming Zhu, Mark Staples, Yan Liu","author_ids":"7925496, 8301531, 2042060, 1681842","abstract":"This paper introduces an architecting method for distributed process-intensive systems. Traditional methods (e.g. object-orientation, structured analysis or component/service-based designs) decompose a process-intensive system into entities with attached domain-specific operations (process constituents). This results in fine-grained Remote Procedure Calls in distributed systems which are often detrimental to quality attributes such as performance, loose-coupling, adaptability and interoperability. Our method tailors the REpresentational State Transfer (REST) principles used for hypermedia data transfer to process-intensive systems by making process constituents into resources, and attaching a set of standard operations. Distributed processes interoperate by adhering to these operations and exchanging process information. In our method, process information exchange contains not only typical meta-information about a process, but also process fragments that indicate possible next-steps and interconnectedness for process coordination purposes. We have implemented our method in a Web environment and conducted a case study providing initial validation of its benefits.","cites":"0","conferencePercentile":"3.658536585"},{"venue":"WICSA/ECSA","id":"e00b1e7e3ad0454dcd4447be2f9318ea2cb481c7","venue_1":"WICSA/ECSA","year":"2009","title":"Using architecture integration patterns to compose enterprise mashups","authors":"Yan Liu, Xin Liang, Lingzhi Xu, Mark Staples, Liming Zhu","author_ids":"1681842, 6256591, 8541013, 2042060, 8301531","abstract":"Enterprise mashups deal with corporate data and various sources of information to compose new value-added applications. The architecture design of enterprise mashups encompasses integration issues—it needs to integrate heterogeneous data and/or compose new situational applications from existing infrastructure. We envisage that architecture integration patterns can be applied not only as architecture solutions to mashup development, but also to help develop practical mashup techniques. In this paper, we combine several common architecture integration patterns, namely Pipes and Filters, Data Federation, and Model-View-Control to compose enterprise mashups. A number of techniques are also developed to customize these patterns for specific mashup needs. We illustrate our approach with a property valuation service derived from a real-world setting .","cites":"0","conferencePercentile":"3.658536585"},{"venue":"WICSA/ECSA","id":"713bfbe27c6a9e109a5cd91db6d32ac6fc3547b3","venue_1":"WICSA/ECSA","year":"2012","title":"An Architectural Approach for Cost Effective Trustworthy Systems","authors":"Ihor Kuz, Liming Zhu, Leonard J. Bass, Mark Staples, Xiwei Xu","author_ids":"1764367, 8301531, 2040359, 2042060, 7925496","abstract":"— We describe a research program on design techniques to enable the cost-effective construction of trustworthy systems. The focus is on single-machine systems that can be formally verified to provide desired system-wide security and safety properties. Such systems are designed as compositions of small trusted components and large untrusted components whose behaviour is constrained by an underlying formally verified OS kernel. Past work has shown that building these systems is possible, now we wish to do so in a cost effective way. A key part of doing this is to design, as early as possible, an architecture that can provide the required trustworthiness properties. The research program envisions methods, models, analyses, and patterns to create and formally analyse such architectures. We present initial work on this program and discuss the gaps and research questions that will shape future research. I. INTRODUCTION Constructing trustworthy large-scale systems is one of four grand challenges in information security enumerated in 2004 [1]. Trustworthiness encompasses functional correctness and also includes properties of security (confidentiality, integrity, availability) and safety (it also relates to reliability and maintainability, which we do not currently consider) [2]. Software is trusted when its failure can break specified trustworthiness properties. The reliance of trustworthy systems on the specification of individual properties is understood in the trustworthy systems community but not so well outside of that community. As an example, you may trust an individual to keep a secret but not to be able to leap tall buildings in a single bound. Keeping a secret and leaping a building are two distinct properties with different techniques for verifying and different levels of trust in the verification techniques. A common strategy for building trustworthy systems is to identify the system's trusted computing base (TCB), separate it from the rest of the codebase, ensure that it is correct and show that specific use of the TCB will guarantee trusted properties for the whole system. Ensuring correctness of the TCB can be done in a variety of ways, including testing, certification, code synthesis, and formal verification. The highest levels of assurance about the trustworthiness of a software system rely on formal verification, but in practice, when it comes to functional correctness, it is infeasible to formally verify the","cites":"4","conferencePercentile":"54"},{"venue":"WICSA/ECSA","id":"f459c32695adc34f31fdc90cef7a525ccf7c845c","venue_1":"WICSA/ECSA","year":"2009","title":"Layered architecture revisited - Comparison of research and practice","authors":"Juha Savolainen, Varvana Myllärniemi","author_ids":"1758826, 3207167","abstract":"Organizing a software architecture into layers has been one of the earliest architectural styles ever used. Even today layered structure is a very common architectural style used in various industrial systems. However, we have observed that the usage of layered architectural style varies greatly in different contexts. This paper aims to compare the notion of software architecture layers in research literature as well as in industrial practice. Firstly, we performed a systematic literature review of research articles on layered software architectures; we also reviewed selected books of software architecture. Secondly, to understand the practice, we investigated a number different recent architecture documents to cover the current usage of layered architectures. Our results indicate that there is very little actual research done on layered architectures. The current usage of layered structures seems to be more complex than reported before. This gap between the research and practice needs to be bridged by researchers.","cites":"5","conferencePercentile":"52.43902439"},{"venue":"WICSA/ECSA","id":"121a8d9f9d8aa10c2ff8133b1a968ee3da1693b4","venue_1":"WICSA/ECSA","year":"2012","title":"A Reference Architecture for Mobile Code Offload in Hostile Environments","authors":"Soumya Simanta, Grace A. Lewis, Edwin J. Morris, Kiryong Ha, Mahadev Satyanarayanan","author_ids":"1689046, 1723579, 1727318, 1855637, 1747303","abstract":"Handheld mobile technology is reaching first responders and soldiers in the field to aid in various tasks such as speech and image recognition, natural language processing, decision making, and mission planning. However, these applications are computation-intensive and we must consider that 1) mobile devices offer less computational power than a conventional desktop or server computer, 2) computation-intensive tasks take a heavy toll on battery power, and 3) networks in hostile environments such as those experienced by first responders and soldiers in the field are often unreliable and bandwidth is limited and inconsistent. While there has been considerable research in code offload to the cloud to enhance computation and battery life, most of this work assumes reliable connectivity between the mobile device and the cloud—an invalid assumption in hostile environments. This paper presents a reference architecture for mobile devices that exploits cloudlets—VM-based code offload elements that are in single-hop proximity to the mobile devices that they serve. Two implementations of this reference architecture are presented, along with an analysis of architecture tradeoffs.","cites":"11","conferencePercentile":"90"},{"venue":"WICSA/ECSA","id":"d43612a9f9dd719610a0dd593c66590ed5e9bda1","venue_1":"WICSA/ECSA","year":"2009","title":"Ontology-driven visualization of architectural design decisions","authors":"Remco C. de Boer, Patricia Lago, Alexandru Telea, Hans van Vliet","author_ids":"1755884, 1678652, 1686665, 3996792","abstract":"There is a gradual increase of interest to use ontolo-gies to capture architectural knowledge, in particular architectural design decisions. While ontologies seem a viable approach to codification, the application of such codified knowledge to everyday practice may be non-trivial. In particular , browsing and searching an architectural knowledge repository for effective reuse can be cumbersome. In this paper, we present how ontology-driven visualiza-tion of architectural design decisions can be used to assist software product audits, in which independent auditors perform an assessment of a product's quality. Our visualization combines the simplicity of tabular information representation with the power of on-the-fly ontological inference of decision attributes typically used by auditors. In this way, we are able to support the auditors in effectively reusing their know-how, and to actively assist the core aspects of their decision making process, namely trade-off analysis, impact analysis, and if-then scenarios. We demonstrate our visualization with examples from a real-world application.","cites":"12","conferencePercentile":"80.48780488"},{"venue":"WICSA/ECSA","id":"effc967952f475ffd64f91d3965af8e77ef832ee","venue_1":"WICSA/ECSA","year":"2009","title":"Modeling architectural change: Architectural scripting and its applications to reconfiguration","authors":"Mads Ingstrup, Klaus Marius Hansen","author_ids":"1718603, 1781815","abstract":"We detail the notion of architectural scripting (ASL) as a way to model the dynamic aspects of runtime and deployment-time software architecture. This is complementary to the ability of architecture description languages to model architectures statically in that we define scripting operations to modify architectures at runtime. The scripting operations have as verification of the approach been implemented in an interpreter bundle on the OSGi platform. This implementation is used in our self-management system for generating correct reconfiguration plans in a self-managed system.","cites":"3","conferencePercentile":"34.14634146"}]}