{"WISER.csv":[{"venue":"WISER","id":"5d8a6a7c092608c062c3d454c6337594067dfe20","venue_1":"WISER","year":"2004","title":"Hardware/software co-design for power system test development","authors":"Austin Armbruster, Matt Ryan, Xiaoqing Frank Liu, Ying Cheng, Bruce M. McMillin","author_ids":"2239631, 8724729, 1687294, 5098552, 1711651","abstract":"Many hardware/software co-design models have been proposed [7,2,5,6 ]that attempt to address problems in the hardware/software interface,in partitioning the system between hardware and software, and in finding a uniform method of verifying the system 's correctness. This paper describes the High Order Object-oriented Modeling Technique [4,3 ]and its use in specifying and designing a hardware-in-the-loop test environment or the non-trivial application of bulk power systems control.A HOOMT model o the system for the real system and the test system is given. The paper also presents our solution to the mapping of requirements from the real system to the test system.","cites":"2","conferencePercentile":"29.16666667"},{"venue":"WISER","id":"148d831543b4d678ff26c174c6e936977a90c632","venue_1":"WISER","year":"2006","title":"A cognitive perspective on software development methods: the case of extreme programming","authors":"Orit Hazzan, Yael Dubinsky","author_ids":"1738207, 1772317","abstract":"One of the main dilemmas with which software development teams face is how to choose a software development method that suits the team as well as the organization. This short paper suggests an approach that may help in this process. Specifically, Extreme Programming (XP) is analyzed from a cognitive perspective. We suggest that such an analysis can support software development processes.","cites":"1","conferencePercentile":"41.66666667"},{"venue":"WISER","id":"3cbb6bc9c064150fca9d6e7e72cb0ab8a493b789","venue_1":"WISER","year":"2004","title":"Effective work practices for software engineering: free/libre open source software development","authors":"Kevin Crowston, Hala Annabi, James Howison, Chengetai Masango","author_ids":"1716974, 2603698, 2178028, 1819112","abstract":"We review the literature on Free/Libre Open Source Software (FLOSS) development and on software development, distributed work and teams more generally to develop a theoretical model to explain the performance of FLOSS teams. The proposed model is based on Hackman's [34] model of effectiveness of work teams, with coordination theory [52] and collective mind [79] to extend Hackman's model by elaborating team practices relevant to effectiveness in software development. We propose a set of propositions to guide further research.","cites":"39","conferencePercentile":"91.66666667"}]}