{"WOP.csv":[{"venue":"WOP","id":"978c144e1de2d1b8a09a4e5e0dfbb29088931343","venue_1":"WOP","year":"2015","title":"A Minimal Ontology Pattern for Life Cycle Assessment Data","authors":"Krzysztof Janowicz, Adila Krisnadhi, Yingjie Hu, Sangwon Suh, Bo Pedersen Weidema, Beatriz Rivela, Johan Tivander, David E. Meyer, Gary Berg-Cross, Pascal Hitzler, Wesley Ingwersen, Brandon Kuczenski, Charles Vardeman, Yiting Ju, Michelle Cheatham","author_ids":"1727108, 1867973, 7741814, 7392020, 3056208, 2272835, 1912119, 4080716, 2326561, 1699771, 2347908, 1899165, 3016663, 3137382, 3298045","abstract":"Life Cycle Assessment (LCA) is the study of the environmental impact of products taking into account their entire lifespan and production chain. This requires gathering data from a variety of heterogeneous sources into a Life Cycle Inventory (LCI). LCI preparation involves the integration of observations and engineering models with reference data and literature results from around the world, from different domains, and at varying levels of granularity. Existing LCA data formats only address syntactic interoperability, thereby often ignoring semantics. This leads to inefficiencies in information collection and management and thus a variety of challenges, e.g., difficulties in reproducing assessments published in the literature. In this work, we present an ontology pattern that specifies key aspects of LCA/LCI data models, i.e., the notions of flows, activities, agents, and products, as well as their properties.","cites":"2","conferencePercentile":"90"},{"venue":"WOP","id":"635623cfc473141133155593d7bc73b14d91c536","venue_1":"WOP","year":"2014","title":"An Ontology Design Pattern for Material Transformation","authors":"Charles Vardeman, Adila Krisnadhi, Michelle Cheatham, Krzysztof Janowicz, Holly Ferguson, Pascal Hitzler, Aimee Buccellato, Krishnaprasad Thirunarayan, Gary Berg-Cross, Torsten Hahmann","author_ids":"3016663, 1867973, 3298045, 1727108, 1995834, 1699771, 2440710, 3195814, 2326561, 2376472","abstract":"In this work we discuss an ontology design pattern for material transformations. It models the relation between products, resources, and catalysts in the transformation process. Our axiomatization goes beyond a mere surface semantics. While we focus on the construction domain, the pattern can also be applied to chemistry and other domains.","cites":"3","conferencePercentile":"100"},{"venue":"WOP","id":"7e761a8803fb2809da5e5a2f872ece45757b9185","venue_1":"WOP","year":"2009","title":"Ontologies Construction for Web Services","authors":"Aviv Segev, Quan Z. Sheng","author_ids":"2260629, 1713128","abstract":"Ontologies have become the de-facto modeling tool of choice, employed in a variety of applications and prominently in the Semantic Web. Nevertheless , ontology construction remains a daunting task. Ontological bootstrap-ping, which aims at automatically generating concepts and their relations in a given domain, is a promising technique for ontology construction. Bootstrapping an ontology based on a set of predefined textual sources, such as Web services, must address the problem of multiple concepts that are largely unrelated. This paper exploits the advantage that Web services usually consist of both WSDL and free text descriptors. The WSDL descriptor is evaluated using two methods, namely Term Frequency/Inverse Document Frequency (TF/IDF) and Web context generation. We propose an ontology bootstrapping process that integrates the results of both methods and validates the concepts using the free text descriptors, thereby offering a more accurate definition of ontologies.","cites":"0","conferencePercentile":"13.33333333"},{"venue":"WOP","id":"cebe0a6a64e38ba35f8a836fd0e8f7f41f71536e","venue_1":"WOP","year":"2012","title":"Modest Use of Ontology Design Patterns in a Repository of Biomedical Ontologies","authors":"Jonathan Mortensen, Matthew Horridge, Mark A. Musen, Natalya Fridman Noy","author_ids":"4243867, 1802820, 8691132, 2105209","abstract":"Ontology Design Patterns (ODPs) provide a means to capture best practice, to prevent modeling errors, and to encode formally common modeling situations for use during ontology development. Despite the popularity of ODPs and supposed positive effects from their use, there is scant empirical evidence of their level of adoption in real world ontologies or on their effectiveness. Knowing the goals of ODPs, they may assist in the development of large-scale biomedical ontologies. Before studying ODP effectiveness and applicability, we ask the following questions to understand better the landscape of ODP use: Are ODPs used in biomedical ontologies? Which patterns do the ontology developers use? In which ontologies? How frequently are patterns used? To answer these questions, we determined the adoption of ODPs from two popular ODP libraries among the ontologies in BioPortal, a large ontology repository that contains over 300 biomedical ontologies. We encoded 68 ODPs from two online libraries in the Ontology Pre-Processor Language, and, using these encodings, determined ODP prevalence in BioPortal ontologies. We found modest use of ODPs, with 33% of the ontologies containing at least one pattern. Upper Level Ontology, Closure, and Value Partition were the three most commonly used patterns, occurring in 20%, 9%, and 6% of the BioPortal ontologies, respectively. The low prevalence of ODPs may be due to lack of proper tooling, lack of user knowledge of and education about them, the age of the ontologies in the repository, or the specificity of some ODPs. We noted that there is a tension between the high expressivity of many ODPs and the goal of maintaining low expressivity of some biomedical ontologies. Additional tooling is necessary to make ODPs more accessible to domain experts. Furthermore, we suggest that ODPs may be developed in a bottom-up fashion, much like software-design patterns. 1 Ontology Design Patterns There is a large body of research establishing and creating Ontology Design Patterns (ODPs) [11, 5]. Yet, there is little work to determine their use or effectiveness. In biomedicine, the development and use of ontologies are growing rapidly. This","cites":"4","conferencePercentile":"76.92307692"},{"venue":"WOP","id":"ddee61d54818bd7dccaca6a264654a9a69b7fe56","venue_1":"WOP","year":"2013","title":"Abstracting Transport to an Ontology Design Pattern for the Geosciences","authors":"Brandon Whitehead, Benjamin Adams, Mark Schildhauer, Charles Vardeman, Werner Kuhn, Adam Shepherd, Krishna Sinha","author_ids":"2894728, 4879334, 1962202, 3016663, 2976136, 1874729, 4275238","abstract":"A core concept in geoscience/physical science research is the concept of transport. We present an ontology design pattern for the notion of transport in the geosciences using natural language coupled with a concept map. The top level concepts of the Transport Pattern are transport entity, transport mechanism, and transport event. These concepts are described in detail, and a brief example is provided to illustrate the usefulness of the pattern.","cites":"0","conferencePercentile":"22.72727273"},{"venue":"WOP","id":"79e134b4ba77ba0ee7f485b08b12b44774e52776","venue_1":"WOP","year":"2012","title":"The Template Instance Pattern","authors":"Csongor Nyulas, Tania Tudorache, Samson W. Tu","author_ids":"3099253, 2860978, 1702645","abstract":"We present the Template Instance Pattern, a content design pattern that marks an instance, which is used as a value for a property, to be a \" template \". A template instance is intended to be immutable (none of its properties can be changed). If the content (i.e., any of the property values) of the template instance needs to be changed, a template flag will indicate to an ontology editor that it should create a clone of the template instance, and replace the value of the property with the desired value in the newly created clone. This pattern is especially useful for cases in which an ontology makes abundant use of reified relations (represented as instances), which are repetitive and that increase significantly the size of an ontology. We created this pattern as a result of building a large real world medical ontology that makes excessive use of reification. Ontologies make use of reified relations to model n-ary relations or describe additional properties of a relation (e.g., confidence level, provenance, and so on). For example, biomedical ontologies often need to qualify facts about the domain with scientific evidence: a definition of a disease would need to include links to scientific papers that sourced or endorsed that definition, or relationships between different entities need to carry a probability. Some ontologies, such as the ICD-11 [2, 1] make extensive use of reified relations. Practically, all relations in the ICD-11 ontology are reified. One issue with reification is that it creates the intermediate reified instances that do not contribute any real content, but they rather provide a structure that groups together all properties of a reified relation. An ontology that makes abundant use of reified relationships is likely to be very large in size due to the \" clutter \" introduced by the reified instances. A larger ontology may be harder to maintain, and may create challenges for ontology editors or reasoners. The template instance pattern proposes a way of reducing the number of reified instances and the related property assertion axioms in an ontology, especially for the cases in which the reified relations are identical for multiple entities. The pattern proposes to use the same \" template \" instance as the value of a reified property for multiple subjects (rather than having multiple copies of the same reified instance). We give an example in Figure 1 to make it easier to understand. â€¦","cites":"0","conferencePercentile":"19.23076923"},{"venue":"WOP","id":"224db94876ae3f9e56e94bbc415c48dd31f6583b","venue_1":"WOP","year":"2012","title":"Ontology Design Pattern Language Expressivity Requirements","authors":"Matthew Horridge, Mikel EgaÃ±a Aranguren, Jonathan Mortensen, Mark A. Musen, Natalya Fridman Noy","author_ids":"1802820, 3946134, 4243867, 8691132, 2105209","abstract":"In recent years there has been a large amount of research into capturing, publishing and analysing Ontology Design Patterns (ODPs). However, there has not been any analysis into the typical language ex-pressivity required to represent ODPs and how these requirements sit with lightweight fragments of the widely used ontology language OWL. In this paper we therefore present a survey on the language expressivity required to express the ODPs contained in the two main ODP catalogs: ODP.org and ODPS.sf.net. We surveyed a total of 104 machine process-able ODPs and found that the OWL representations of these patterns typically require highly expressive fragments of the OWL language such as ALCHIN , SHOIN , SHOIQ and SROIQ. We observed that most ODPs required the use of inverse properties, cardinality restrictions and universal restrictions, and that 10 patterns require OWL 2 constructs such as property chains, disjoint properties and qualified cardinality restrictions that are not available in OWL 1. Moreover, we found that most of the ODPs cannot be incorporated into ontologies that are constrained to fit into one of the OWL 2 profiles. Specifically, only 12 out of the 104 ODPs surveyed can be represented in OWL2EL, 13 in OWL2RL and 23 in OWL2QL. Despite this, we conjecture that it may be possible to rewrite and weaken some of them so that modellers using lightweight fragments of OWL can incorporate ODPs into their ontologies.","cites":"5","conferencePercentile":"88.46153846"}]}