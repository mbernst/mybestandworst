{"WOSP.csv":[{"venue":"WOSP","id":"aabee8b953d3d6f5c75c08228fba08414c30d50f","venue_1":"WOSP","year":"2004","title":"Early-stage performance modeling and its application for integrated embedded control software design","authors":"Shige Wang, Kang G. Shin","author_ids":"1740475, 1730051","abstract":"Most of current embedded control software (ECSW) development techniques deal only with performance specifications during the early software design phase and delay the modeling and analysis until the detail design has been completed. In this paper, we propose a new approach to modeling and analysis of the performance of the designed ECSW without knowing the platform configuration and the software deployment. The functional model is assumed --- as is commonly the case in practice --- to be constructed by integrating existing (reusable) software components. The performance of components and connections in the model are modeled using annotated requirements and virtual resource demands. Our algorithm then computes the system performance such as end-to-end delays of transactions and workloads by traversing the model. The results can be applied to the platform design and runtime architecture generation. To demonstrate the usefulness of the proposed method in real world applications, we present the analysis of automotive vehicle-to-vehicle control software as an example.","cites":"8","conferencePercentile":"45.94594595"},{"venue":"WOSP","id":"1bc3e4efae4cd067500050fec7ac8e5aa5c94cb6","venue_1":"WOSP","year":"2007","title":"The challenges of open-world software","authors":"Carlo Ghezzi","author_ids":"1716252","abstract":"Software has been evolving from pre-defined, monolithic, centralized architectures to decentralized, distributed, dynamically composed federations of components whose goal is to provide useful services. Software processes have been evolving along similar lines, from pre-specified sequential work- flows to decentralized and multi-organization endeavors. The organizations to which software solutions are targeted have also been evolving from highly structured to agile and networked enterprises. All this is affecting the way software is engineered (i.e., conceived, architected, and produced).Software applications increasingly live in an open world: They are embedded in dynamically evolvable environments and must adapt to continuous and even unpredictable change. Accordingly, software architectures need to evolve dynamically and must support reconfiguration and self-organizing features to respond to change requirements. Programming languages and their underlying support infrastructure, in turn, must provide specific features to support this level of dynamism. The traditional approaches followed to ensure software quality, which focus exclusively on pre-runtime validation, are inadequate in this new context. Continuous validation becomes necessary: validation must extend to after the system is deployed and running.The talk surveys the main architectural styles that support dynamic software compositions, the language and infrastructure requirements, and provides a view of the validation process for dynamically evolvable software systems.","cites":"2","conferencePercentile":"21.15384615"},{"venue":"WOSP","id":"82d10a43491d8ad0b74f7fca2ea7f522af491b79","venue_1":"WOSP","year":"2004","title":"Predicting the performance of middleware-based applications at the design level","authors":"Yan Liu, Alan Fekete, Ian Gorton","author_ids":"1681842, 1737644, 1680770","abstract":"In this paper, we present an approach to predict the performance of middleware-based applications at the design level. We develop a quantitative performance model for a proposed system design. The inputs needed to produce this performance prediction are a state diagram showing the main waiting and resource usage aspects of the proposed system architecture, and measurements taken on the middleware infrastructure using a simple benchmark application which is much cheaper to implement than the full system. The performance model allows the system designer to evaluate the architecture and implementation approaches in term of their ability to achieve required performance. We show our method in action using a J2EE application, Stock-Online, and validate the predictions by implementing the design and measuring its performance. The modeling approach is applicable to applications built on common middleware technologies such as CORBA, J2EE and COM+/.NET.","cites":"24","conferencePercentile":"75.67567568"},{"venue":"WOSP","id":"5118f77079af061458c02c1f086c14743886d217","venue_1":"WOSP","year":"1998","title":"Predicting memory use from a class diagram using dynamic information","authors":"Gail C. Murphy, Ekaterina Saenko","author_ids":"1739674, 2936223","abstract":"Increasingly, new applications are being built by composing existing software components rather than by coding a system from scratch. Using this approach, applications can be built quickly. Far too often, however, these applications do not exhibit acceptable performance. The benefits of construction through composition could be more reliably achieved if a software engineer could assess the performance impact of a component prior to its use. In this paper, we present our experiences of taking a straightforward approach to a piece of this problem: predicting the memory use of an existing component for a new application. The approach consists of annotating a structural viewa class diagramof an object-oriented component with data gathered from sample existing uses of the component. The annotated view is then used as a basis for prediction. Our experience highlights several of the difficulties software engineers face in not only predicting, but also in analyzing, the space performance of existing object-oriented components.","cites":"0","conferencePercentile":"10"},{"venue":"WOSP","id":"2228695a43c1ecddb268d046e033dec9cab3053e","venue_1":"WOSP","year":"1998","title":"Capacity planning with phased workloads","authors":"Elizabeth Borowsky, Richard A. Golding, P. Jacobson, Arif Merchant, L. Schreier, Mirjana Spasojevic, John Wilkes","author_ids":"3274033, 3157835, 7851960, 1863834, 2511750, 2968608, 1722703","abstract":"At the heart of any connguration or capacity planning algorithm for storage systems, there lies a what if\" question: given a device and a set of workloads ac-cessing data on the device, will the quality o f service requirement for each workload be satissed? This is, in general, a hard question to answer because of the complexity o f w orkloads in real life. In this paper, we consider QoS bounds on the 95th percentile of response time and demonstrate an approximate method to verify that the QoS requirement is satissed for a complex and fairly general set of workloads, including work-loads with phasing onnoo behavior and correlations with other workloads.","cites":"27","conferencePercentile":"88"},{"venue":"WOSP","id":"1dc213299c05d6b879d0f604f34811851014f720","venue_1":"WOSP","year":"2008","title":"Controlled dynamic performance analysis","authors":"Steven P. Reiss","author_ids":"1684347","abstract":"We are interested in obtaining detailed performance information on-the-fly from long-running systems without adversely affecting the performance of the systems. We have developed a methodology consisting of a framework, DYPER, and a number of specialized agents called proflets each of which analyzes a different performance aspect. DYPER gathers performance information with a guaranteed maximum overhead that is dynamically settable by the programmer using priorities set by the proflets. Moreover, the type of information that the system can provide is generally only available for tools that generally have too much overhead to be usable in production or long-running systems. DYPER includes the ability to control and display performance data as the program is run.","cites":"10","conferencePercentile":"70"},{"venue":"WOSP","id":"677d21b86281699731bb958253fb33294d2bdd62","venue_1":"WOSP","year":"2004","title":"Using locality of reference to improve performance of peer-to-peer applications","authors":"Marcelo Werneck Barbosa, Melissa Morgado Costa, Jussara M. Almeida, Virgílio A. F. Almeida","author_ids":"2903126, 1916343, 8118988, 7360316","abstract":"Peer-to-peer, or simply P2P, systems have recently emerged as a popular paradigm for building distributed applications. One key aspect of the P2P system design is the mechanism used for content location. A number of different approaches are currently in use. In particular, the location algorithm used in Gnutella, a popular and extensively analyzed P2P file sharing application, is based on flooding of messages in the network, which results in significant processing overhead on the participant nodes and thus, poor performance.In this paper, we provide an extensive performance evaluation of alternative algorithms for content location and retrieval in P2P systems, in particular, the Freenet and Gnutella systems. We compare the original Freenet and Gnutella algorithms, a previously proposed interest-based algorithm and two new algorithms which also explore locality of interest among peers to efficiently allow content location. Unlike previous proposals, the new algorithms organize the peers into communities that share interests. Two peers are said to have common interest if they share some of the locally stored files.In order to evaluate the performance of these algorithms, we use a previously developed Freenet simulator and build a new Gnutella simulator, which includes several realistic system characteristics. We show that the new community-based algorithms improve the original Gnutella content location latency (and thus the system QoS) and system load by up to 31% and 30%, respectively. Our algorithms also reduce the average Freenet request and response path lengths by up to 39% and 31%, respectively. Furthermore, we show that, compared to the previously proposed interest-based algorithm, our new algorithms improve query latency by up to 27% without a significant increase in the load.","cites":"9","conferencePercentile":"51.35135135"},{"venue":"WOSP","id":"466b0172de2461c5a04192704be83fdc37bd76e5","venue_1":"WOSP","year":"2007","title":"Performance analysis and prediction of physically mobile systems","authors":"Antinisca Di Marco, Cecilia Mascolo","author_ids":"2112471, 1733840","abstract":"The market of portable computational devices is expanding more and more rapidly. The systems created by the interactions of these devices among themselves and with the surrounding infrastructure result in being quite different from existing traditional systems in terms of connectivity, dynamicity and resource availability. As a consequence, existing performance evaluation and prediction techniques appear to be inadequate to the application to mobile systems. While some adaptations have been proposed for systems presenting some logical mobility (i.e., software mobility), very little has been attempted to provide useful performance prediction methodologies for physically mobile systems.In this paper we present a methodology for modeling performance of physically mobile systems: our aim is to provide guidelines for the designer of the system on how particular physical mobility patterns affect the system performance and on how these measures can be taken into account in the early stages of the system development.","cites":"11","conferencePercentile":"69.23076923"},{"venue":"WOSP","id":"91271a4cea59119352143b8d8f99cfa5276c92b9","venue_1":"WOSP","year":"2007","title":"Hybrid performance modeling approach for network intensive distributed software","authors":"Tom Verdickt, Bart Dhoedt, Filip De Turck, Piet Demeester","author_ids":"2962751, 1733741, 1715957, 1742060","abstract":"When designing and evaluating software architectures and network facilities for hosting demanding distributed applications, taking performance considerations into account is essential. A key factor in assessing the performance of such a distributed system is the network latency and its relation to the application behaviour. In this respect, it is important to include the performance impact of the network into the performance models used during the entire design cycle of the system.A framework is proposed that allows to model both the software and the network components separately and extracts a single set of performance estimates for the entire system. This has the advantage of allowing the network and software aspects to be modeled separately using the modeling languages and tools most suited to those system aspects. A case study is presented to illustrate the use of the framework and its usefulness in predicting system performance.","cites":"4","conferencePercentile":"48.07692308"},{"venue":"WOSP","id":"c3bd451e03d0b308f54e241f130ccd353639ff66","venue_1":"WOSP","year":"2004","title":"Incorporating SPE into MDA: including middleware performance details into system models","authors":"Tom Verdickt, Bart Dhoedt, Frank Gielen","author_ids":"2962751, 1733741, 1702863","abstract":"A typical feature of a distributed system is the heterogeneity of its components (their geographical spreading, using different programming languages and platform architectures, etc.). To solve some of the problems related to this heterogeneity, many distributed systems use communication middleware.This paper presents an MDA model transformation algorithm and tool for transforming a high-level Platform Specific Model (high-level PSM) to a low-level PSM by including the structural changes and the overhead of using CORBA as a middleware. The resulting PSM (a UML model annotated with performance information, using the UML performance profile) can be used for generating performance models of the system, using existing methods and tools.","cites":"4","conferencePercentile":"33.78378378"}]}