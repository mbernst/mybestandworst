{"WSE.csv":[{"venue":"WSE","id":"184b5c5d0dcbe1d4685cccbfc729d759d5a67c29","venue_1":"WSE","year":"2007","title":"A Comparison of Push and Pull Techniques for Ajax","authors":"Engin Bozdag, Ali Mesbah, Arie van Deursen","author_ids":"1779305, 2155776, 1737202","abstract":"reserved. No part of this series may be reproduced in any form or by any means without prior written permission of the publisher. Abstract AJAX applications are designed to have high user interactiv-ity and low user-perceived latency. Real-time dynamic web data such as news headlines, stock tickers, and auction updates need to be propagated to the users as soon as possible. However, AJAX still suffers from the limitations of the Web's request/response architecture which prevents servers from pushing real-time dynamic web data. Such applications usually use a pull style to obtain the latest updates, where the client actively requests the changes based on a predefined interval. It is possible to overcome this limitation by adopting a push style of interaction where the server broadcasts data when a change occurs on the server side. Both these options have their own trade-offs. This paper explores the fundamental limits of browser-based applications and analyzes push solutions for AJAX technology. It also shows the results of an empirical study comparing push and pull.","cites":"0","conferencePercentile":"12.5"},{"venue":"WSE","id":"b9ac41724a64d225f8f1e6d8e399b8e886866af1","venue_1":"WSE","year":"2011","title":"Ten years of access for all from WSE 2001 to WSE 2011","authors":"Holger M. Kienle, Porfirio Tramontana, Scott R. Tilley, Davide Bolchini","author_ids":"2643436, 1712641, 1686047, 1780806","abstract":"—At WSE 2001 the theme was Access for All. A decade later, this theme is revisited for WSE 2011. We take this opportunity to discuss the past, present, and future of Web accessibility. Five representative categories of Web accessibility are considered: accommodating disabilities, Web literacy, user interfaces, lingual barriers, and open data.","cites":"3","conferencePercentile":"57.14285714"},{"venue":"WSE","id":"f894454d8cf3caad0b8be4cfa1380b63fdf79687","venue_1":"WSE","year":"2005","title":"Evaluating Web Usability With MiLE+","authors":"Luca Triacca, Alessandro Inversini, Davide Bolchini","author_ids":"2713284, 2572984, 1780806","abstract":"Websites (or more in general interactive applications) need to be evaluated from a usability perspective for improving their quality for the end-users. This paper introduces a systematic methodology called MiLE+ which proposes an innovative approach to usability evaluation under several aspects. The main original feature is the separation between application-independent analysis (based on usability principles) and application-dependent analysis (based on the requirements of the application). The paper explores the differences between these types of analysis and presents the activities for carrying them out in an effective way.","cites":"7","conferencePercentile":"60"},{"venue":"WSE","id":"214f4fab730c0bab1fc8efdcfcac1a363fde86cb","venue_1":"WSE","year":"2008","title":"Requirement engineering for Web applications","authors":"Li Zhang","author_ids":"1712838","abstract":"With the rapid development of service computing technology, Web Application Development (WAD) is getting rid of heavy programming labor and replacing it with resource aggregation to reuse available services on the Internet. Thus, designing and programming phases will no longer account for a big ratio in software development lifecycle. Rather, requirements engineering (RE), a phase that comes before design and programming, will play a more important role that determines the success of WAD. In fact requirements engineering should be as complex and well thought out as the design and programming, yet its insufficiencies have led to many projects with poor requirements and blamed as the major reason for many software failures. Therefore, requirements engineering is now moving to the forefront gaining increased significance in software engineering for services oriented web applications. Web applications requirements have new characteristics causing them to change more rapidly. This makes traditional requirements modeling and validation methods insufficient to provide adequate support for web applications. The requirements of the web applications come from not only the general domain analysis and the personalized, diverse users' requirements, but also the availability of the related web services. Web applications requirements are also evolving while they are widely used. Therefore, RE for Web applications (RE4Webapp) is challenged to explore sound engineering approaches for eliciting (identifying), describing, validating and managing requirements of Web applications. Our investigating of RE4Webapp is based on a hierarchical and cooperative requirements engineering framework named RGPS-C, which is a cyclical model consisting of four layers, namely Role, Goal, Process and Service. Based on this model, we will discuss the challenges and principles for RE4Webapp fundamental activities in the cyclical process, including requirement elicitation, analysis, evolution, validation, and management. In the cyclical process of RE4Webapp, requirements validation is a crucial activity to ensure high-quality requirements. Based on RGPS-C model, a framework is provided to examine the factors involved in validating requirements, delineate some issues and problems in validating requirements and puts forth some possible areas for further research in requirements validation as connected to user satisfaction, especially for services oriented web applications.","cites":"0","conferencePercentile":"21.42857143"},{"venue":"WSE","id":"aa1f7f5707bf492957b9a30a6670e4780234ebe4","venue_1":"WSE","year":"2006","title":"Information-Hiding URLs for EasierWebsite Evolution","authors":"Charles Song, Vibha Sazawal","author_ids":"2959898, 1722797","abstract":"Many common elements of URLs do not adhere to the principle of information hiding. For example, filename extensions and parameter names can reveal volatile implementation details. As a result, when website implementations change, links between pages break. Bookmarks and code that generates URLs often break as well. In this paper, we present two tools for information-hiding URLs. An information-hiding URL uses an alias to identify a web resource and appends parameter values into the hierarchical structure of the URL. The InformationHidingFilter uses a Java Servlet filter to facilitate the use of information-hiding URLs with JSP/Servlet web applications. Given a request, the filter identifies the JSP or Servlet being requested and identifies parameter values contained in the information-hiding URL. Required values not provided in the URL are automatically substituted with default values specified by the web developer. Thus, old links remain valid even when the website changes and new parameters have been added to the page. The InformationHidingChecker helps web developers adhere to information hiding by helping them identify JSPs or Servlets that lack URL information for the InformationHidingFilter or lack default values for parameters. We also discuss the performance cost of using information-hiding URLs.","cites":"0","conferencePercentile":"20"},{"venue":"WSE","id":"05f61092846ed455670ce6b05a59129c3f16c2e3","venue_1":"WSE","year":"2005","title":"Crosscutting Concerns in J2EE Applications","authors":"Ali Mesbah, Arie van Deursen","author_ids":"2155776, 1737202","abstract":"We explore the evolution benefits of adopting aspects in a J2EE setting by studying crosscutting concerns in a typical J2EE application. To identify these concerns, we take a top-down as well as a bottom-up approach. In the top-down view we focus on typical concerns that are known to be crosscutting (e.g., persistence), the way they are currently implemented and the possible gains and benefits if solved by aspects. In the bottom-up approach we take a look at the ap-plication's source code, and apply aspect mining techniques in order to find crosscutting concerns. We discuss how such concerns can be represented in an aspect-oriented language (viz. AspectJ), and reflect on the results in terms of maintainability and evolvability of the affected system.","cites":"14","conferencePercentile":"80"},{"venue":"WSE","id":"d0610945ccea1d876b6499a1dd6d5a546885f62e","venue_1":"WSE","year":"2008","title":"Web-based system evolution in model driven architecture","authors":"Feng Chen, Hongji Yang, Hong Zhou, Bing Qiao, Huifang Deng","author_ids":"1692998, 7543171, 2571010, 2196639, 3316833","abstract":"The complexity and size of commercial Web-based systems present a grand challenge to the traditional methodology of software evolution. The booming development of Web related technologies complicates the situation. This research presents a unified solution to Web-based system evolution, which consists of three components: Web-based systems understanding, Web-based systems representation and evolvable Web Application Framework. A comprehensive case study will be given to evaluate the proposed solution in different aspects. Conclusion is drawn based on analysis, which verifies the feasibility of the proposed solution. Further research areas are also discussed.","cites":"4","conferencePercentile":"85.71428571"},{"venue":"WSE","id":"21c82553b0db19646f68957f049c5947e2be7c8e","venue_1":"WSE","year":"2011","title":"Performance trade-offs in client-side service delegation","authors":"Khalid Adam Nasr, Hans-Gerhard Groß, Arie van Deursen","author_ids":"3000796, 2577221, 1737202","abstract":"—Service Oriented Architecture, which builds on distributed computing platforms, is increasingly being adopted by organizations in both public and private sectors. Migration from traditional monolithic systems to services, in particular web services, characterizes much of systems evolution today. This paper analyzes some of the performance and modulariza-tion problems involved in current service-oriented computing. It investigates under which circumstances the communication between service providers and service consumers can be made more efficient by eliminating certain steps from traditional Remote Procedure Call (RPC) methods. After discussing traditional service invocation and its drawbacks, this paper proposes an alternative approach called Distributed Service Delegates (DSD). DSD is based on emphasizing client-side or local computations. An experiment is designed and implemented to measure the trade offs between traditional methods, in this case Web services, and the proposed DSD. The results of this experiment are discussed and its implications for future research are indicated.","cites":"0","conferencePercentile":"14.28571429"},{"venue":"WSE","id":"12a93e31c7e3c5d398d64dc092375e3341bb4c29","venue_1":"WSE","year":"2012","title":"Visual testing of Graphical User Interfaces: An exploratory study towards systematic definitions and approaches","authors":"Ayman Issa, Jonathan Sillito, Vahid Garousi","author_ids":"2722385, 2072868, 1761511","abstract":"—Graphical User Interface (GUI) testing literature emphasizes testing a system's functionality through its GUI, rather than testing visual aspects of the GUI itself. In this paper we introduce the notion of visual testing as a subset of GUI testing. To explore visual testing, we have conducted a study of defects in four open source systems. We found that visual defects represent between 16% and 33% of reported defects in those systems. Two categories of visual defects are identified with six subcategories within each of them. Other findings are also reported that are aimed at motivating the importance and the need for systematically conducting visual testing among researchers and practitioners.","cites":"1","conferencePercentile":"33.33333333"}]}