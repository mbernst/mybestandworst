{"WiPSCE.csv":[{"venue":"WiPSCE","id":"5f07006e61985dba3c063d0da9d5d4b5b63f2577","venue_1":"WiPSCE","year":"2013","title":"Cs4fn and Computational Thinking Unplugged","authors":"Paul Curzon","author_ids":"1731477","abstract":"Computer Science for Fun' (cs4fn) is a public engagement project aiming to both enthuse school students about inter-disciplinary computer science and support computing teachers. It started in 2005, with cs4fn resources now widely used in UK schools as well as internationally. We overview the approach cs4fn has used to inspire students and teachers. In particular we look at how not only subject knowledge but also computational thinking ideas can be taught in an integrated way using cs4fn 'unplugged' activities embedded in stories. We give two illustrative examples, one based on the problem of helping people with locked-in syndrome communicate, the second based around magic tricks.","cites":"1","conferencePercentile":"48.21428571"},{"venue":"WiPSCE","id":"6974d15455bbf5237eec5af571dcd6961480b733","venue_1":"WiPSCE","year":"2014","title":"Introducing teachers to computational thinking using unplugged storytelling","authors":"Paul Curzon, Peter W. McOwan, Nicola Plant, Laura R. Meagher","author_ids":"1731477, 2803283, 2010777, 2873214","abstract":"Many countries are introducing new school computing syllabuses that make programming and computational thinking core components. However, many of the teachers involved have major knowledge, skill and pedagogy gaps. We have explored the effectiveness of using 'unplugged' methods (constructivist, often kinaesthetic, activities away from computers) with contextually rich storytelling to introduce teachers to these topics in a non-threatening way. We describe the approach we have used in workshops for teachers and its survey based evaluation. Teachers were highly positive that the approach was inspiring, confidence building and gave them a greater understanding of the concepts involved, as well as giving practical teaching techniques that they would use.","cites":"1","conferencePercentile":"39.65517241"},{"venue":"WiPSCE","id":"8b41673673bc5a640e042734f70fe93e4be8f0b2","venue_1":"WiPSCE","year":"2014","title":"Preparing secondary computer science teachers through an iterative development process","authors":"Barbara Ericson, Mark Guzdial, Tom McKlin","author_ids":"1724936, 1829670, 3132023","abstract":"An enormous challenge to computing education in secondary schools worldwide is the lack of secondary computer science teachers. The Institute for Computing Education (ICE) has been offering teacher professional development in an attempt to increase the quantity and quality of secondary computing teachers in Georgia in the United States of America since 2004. We have developed our teacher professional development over the last ten years with an iterative cycle of design, development, delivery, and evaluation.","cites":"1","conferencePercentile":"39.65517241"},{"venue":"WiPSCE","id":"88f90dab5a606542479e5f548998fcc8cc68ce29","venue_1":"WiPSCE","year":"2013","title":"Adoption of new computer science high school standards by New Zealand teachers","authors":"David Thompson, Timothy C. Bell","author_ids":"5879353, 2628576","abstract":"Computer science was progressively introduced as a subject in New Zealand high schools between 2011 and 2013, and teachers have played a key role in the success of the introduction of the new curriculum. This paper looks at how the process has worked from their point of view, primarily by comparing teacher responses to two surveys, one early in the process and one after all three years of material had been introduced. We look at the support teachers have had to prepare to teach the new topics, and we identify the aspects of the transition that worked well and the aspects have been problematic. The two surveys reveal an increase in teacher confidence after they had professional development and gained experience teaching the new standards.","cites":"5","conferencePercentile":"98.21428571"},{"venue":"WiPSCE","id":"3b2c706c685734c54f528506a0f2fc127b0cc8da","venue_1":"WiPSCE","year":"2014","title":"Should your 8-year-old learn coding?","authors":"Caitlin Duncan, Timothy C. Bell, Steve Tanimoto","author_ids":"3257328, 2628576, 1908951","abstract":"There has been considerable interest in teaching \"coding\" to primary school aged students, and many creative \"Initial Learning Environments\" (ILEs) have been released to encourage this. Announcements and commentaries about such developments can polarise opinions, with some calling for widespread teaching of coding, while others see it as too soon to have students learning industry-specific skills. It is not always clear what is meant by teaching coding (which is often used as a synonym for programming), and what the benefits and costs of this are. Here we explore the meaning and potential impact of learning coding/programming for younger students. We collect the arguments for and against learning coding at a young age, and review the initiatives that have been developed to achieve this (including new languages, school curricula, and teaching resources). This leads to a set of criteria around the value of teaching young people to code, to inform curriculum designers, teachers and parents. The age at which coding should be taught can depend on many factors, including the learning tools used, context, teacher training and confidence, culture, specific skills taught, how engaging an ILE is, how much it lets students explore concepts for themselves, and whether opportunities exist to continue learning after an early introduction.","cites":"10","conferencePercentile":"96.55172414"},{"venue":"WiPSCE","id":"b61f58a620a27669f49318288620a71e6bafcf88","venue_1":"WiPSCE","year":"2014","title":"Preparing teachers is different than preparing software developers: [WiPSCE'14 keynote]","authors":"Mark Guzdial","author_ids":"1829670","abstract":"Preparing teachers to teach computing is more than a matter of re-purposing existing courses for computer science majors. The tasks, knowledge, and skills of a computing teacher in primary or secondary school are dramatically different than that of a software developer. Computing teachers need pedagogical content knowledge, which includes awareness of common misconceptions, methods for diagnosing those misconceptions, and interventions to help students develop more robust conceptions. The job of a software developer requires knowledge and skills that are irrelevant for a computing teacher. To meet the worldwide need for computing teachers, we must design new kinds of learning opportunities that address the requirements of teachers.\n In this talk, I will present the findings from our studies of the best practices of successful computing teachers, and describe our efforts in finding new ways to support teacher learning about computing. We find that our most successful teachers read and comment code all the time, but almost never write code. The most successful teachers know the content, but also know the most common misconceptions for that content. We find that on-line learning is challenging for teachers to fit into their lives, but we can make learning opportunities that teachers will stick with if we emphasize activities that are lower-cognitive than just writing code on a blank sheet of paper.","cites":"2","conferencePercentile":"65.51724138"},{"venue":"WiPSCE","id":"90795c3350853dfdb5a283bf2b3db536ca68905b","venue_1":"WiPSCE","year":"2012","title":"Teachers' perceptions of the value of research-based school lectures","authors":"Jonathan Back, Paul Curzon, Chrystie Myketiak, Peter W. McOwan, Laura R. Meagher","author_ids":"2457993, 1731477, 2052030, 2803283, 2873214","abstract":"A major challenge facing secondary schools is to encourage students to take computing courses. One approach is to invite external speakers from universities or industry to give lectures. The cs4fn project, a large UK-based initiative to enthuse students about computer science, includes this approach. Speakers from Queen Mary, University of London, visit schools to talk to students about computer science research. Our interactive talks tell engaging research-based stories on topics such as artificial intelligence and human-computer interaction as well as using magic tricks to illustrate computing principles. We asked teachers to complete post-talk surveys online; in particular we were interested in whether they believed students' perceptions of the subject had changed. They reported that their students' views of computer science were improved, and that they felt students were more likely to take classes in computing in the future as a result of the talk.","cites":"0","conferencePercentile":"14.51612903"},{"venue":"WiPSCE","id":"2c9d34d49e91f145b2406759f28b9a1c3fb63771","venue_1":"WiPSCE","year":"2013","title":"Teaching black-box testing to high school students","authors":"Amitrajit Sarkar, Timothy C. Bell","author_ids":"2572848, 2628576","abstract":"This paper focuses on pedagogy for teaching acceptance testing to high school students in the context of the new New Zealand computer science standards. A review of resources that are currently available for teaching acceptance testing to high school students shows a major gap. In order to bridge that gap we have identified and evaluated resources that can be used to teach the concept to school students, have designed and evaluated an interactive tool to teach acceptance testing, and described a student project for the relevant New Zealand achievement standard.","cites":"0","conferencePercentile":"16.07142857"},{"venue":"WiPSCE","id":"9a1b84bce366d15906a30257cc9e35886bc487f2","venue_1":"WiPSCE","year":"2016","title":"Abstraction and common classroom activities","authors":"Jane Waite, Paul Curzon, William Marsh, Sue Sentance","author_ids":"4801869, 1731477, 2497966, 1709307","abstract":"In popularizing computational thinking, Wing notes that 'abstraction is described as underlying computational thinking and computational thinking is described as fundamental to computing.' Emerging curricular now require educators to incorporate computational thinking and abstraction into their teaching. Many refer to Piaget's work as evidence of an age-related ceiling preventing younger pupils from being able to abstract. However, more recent evidence suggests that pupils use elements of abstraction in their general process of learning, and that the skill of abstraction can be explicitly taught. We draw on personal classroom experience to illustrate the points made in the literature. Common classroom activities such as using labelled diagrams, concept maps and storyboards are aligned to features of abstraction. We argue that abstraction can and should be taught to young pupils.","cites":"0","conferencePercentile":"50"},{"venue":"WiPSCE","id":"6e60d3736b0f0e5d53bd58402579719f959a0daf","venue_1":"WiPSCE","year":"2012","title":"The introduction of computer science to NZ high schools: an analysis of student work","authors":"Timothy C. Bell, Heidi Newton, Peter Andreae, Anthony V. Robins","author_ids":"2628576, 2310786, 1747201, 3192332","abstract":"In 2011 New Zealand introduced computer science as a topic that students could take as part of their studies in the last three years of high school. The change was initiated in late 2008, so the new material was introduced with barely two years of preparation and minimal teacher training. Despite this tight timeline, many schools adopted the new topic, and many students successfully completed assessment in it in 2011. The format of the assessment was required to be a report. In this paper we look carefully at the work that students submitted by examining publicly available information (statistics, markers' comments and exemplars), and performing a detailed analysis of a sample of 151 student papers. We describe the nature of the assessment (which is report-based with very flexible criteria for how students can demonstrate their understanding), and examine the kind of work that students submitted to meet the criteria, drawing out good practices that enabled students to do well. A recurring theme is the importance of students being able to use personal authentic examples so that the examiner can hear the \"student's voice\" in their report work, which provides evidence that the student has <i>understood</i> the topic rather than paraphrased descriptions. The analysis also reveals the value of prompting students effectively to get them engaged properly with the concepts, and identifies successful ways to achieve this in the three areas of the analysed standard (algorithms, programming languages and usability).","cites":"7","conferencePercentile":"100"},{"venue":"WiPSCE","id":"606e430a9b8d56ccd62de1e4ca5934827031edf2","venue_1":"WiPSCE","year":"2016","title":"Educational Robotics in the service of CSE: A study based on the PanHellenic competition","authors":"Anastasios Theodoropoulos, Angeliki Antoniou, Giorgos Lepouras","author_ids":"3381177, 2746892, 2432642","abstract":"The present work is an observational study recording the participating teachers' attitudes from the PanHellenic Educational Robotics (ER) competition. The study investigates the benefits of students' involvement with robotics about skills, motivation and learning. Additionally, it is researched weather ER should be introduced in the Greek compulsory curricula. A qualitative methodology was used and although the sample was relatively small (N=18), the results were quite homogeneous showing a very high level of engagement and motivation of teachers and students. The results show that there are numerous benefits for students: they seem to increase their collaboration, problem solving and creativity skills; understand STEM concepts about computer science and engineering and especially gaining programming knowledge. Moreover, most of the teachers consider that ER should be part of the compulsory curriculum.","cites":"0","conferencePercentile":"50"},{"venue":"WiPSCE","id":"7b7f70d12062567a48d51e8d79f42d51351e9fec","venue_1":"WiPSCE","year":"2015","title":"A Pilot Computer Science and Programming Course for Primary School Students","authors":"Caitlin Duncan, Timothy C. Bell","author_ids":"3257328, 2628576","abstract":"Computer Science and programming are being introduced to school curricula in many western countries in an effort to equip students with Computational Thinking skills. However, as these subjects are still relatively new to pre-tertiary education there is much investigation to be done into how best to present these topics and how to prepare teachers. In this study we focus on the presentation of topics relating to computing, Computational Thinking, and Computer Science for primary schools.\n We analyse English-language curricula that have been published, specifically the English, Australian and CSTA curricula for primary schools. From this we establish the main topics covered, and how they are positioned to be suitable for students from the first year of school to approximately their eighth year.\n We then report on a pilot study of a curriculum based on Computational Thinking; long term the study will encompass a range of topics and year levels, but the pilot focused on topics suitable for 11 to 12 year old students. Here we detail the design of this part of the curriculum, the manner of its delivery, and the experiences and observations of the generalist teacher who taught the course. Through assessment data, student responses to an attitude survey, and class observations we have evaluated the pilot curriculum. The findings of this study are being used to inform the design of a planned larger scale study.","cites":"4","conferencePercentile":"96.2962963"},{"venue":"WiPSCE","id":"3760c9db86a99bb25c5b4fa88cd8f0ec6cfcf01d","venue_1":"WiPSCE","year":"2015","title":"Teaching Computer Science to 5-7 year-olds: An initial study with Scratch, Cubelets and unplugged computing","authors":"Benjamin Wohl, Barry Porter, Sarah Clinch","author_ids":"1898038, 1719750, 1787300","abstract":"Changes to school curriculums increasingly require the introduction of computer science concepts to younger children. This practical report compares three existing tools for teaching computer science concepts: unplugged computing, tangible computing and MIT's Scratch. We specifically focus on the use of these tools for school pupils aged 5--7. We describe a comparative study with 28 pupils from three rural UK primary schools that explores engagement with, and effectiveness of, each tool. As far as we are aware this is the first such comparative study of its kind. We demonstrate that the studied tools can be used to successfully introduce core computer science concepts to pupils as young as 5 years of age, that the methods used by teachers to deliver computing curriculums may greatly impact the learning outcomes, and that particular care needs to be taken to ensure that pupils focus on learning concepts rather than learning tools.","cites":"0","conferencePercentile":"24.07407407"},{"venue":"WiPSCE","id":"27eb5fdfe70904e9d3576563920f9b51e71f6b52","venue_1":"WiPSCE","year":"2015","title":"Usability and Usage of Interactive Features in an Online Ebook for CS Teachers","authors":"Barbara Ericson, Steven Moore, Briana B. Morrison, Mark Guzdial","author_ids":"1724936, 6444382, 1783944, 1829670","abstract":"There are too few secondary school computing teachers to meet international needs for growing secondary school computing education. Our group has created an ebook to help prepare secondary teachers to teach the programming and big data concepts in the new AP Computer Science Principles course. The ebook was designed using principles from educational psychology, specifically worked examples and cognitive load. The ebook interleaves worked examples and interactive practice activities, which we believe will lead to more efficient and effective learning than more typical approaches to learning programming. This paper reports the results from initial studies of our ebook. First, we conducted a usability study comparing three different ebook platforms. Next, we conducted a study of teacher use of the ebook. Ten teachers worked through the first eight chapters of the ebook at their own pace. Five of the ten teachers completed the first eight chapters which is a 50% completion rate. Significantly, teachers who used more of the interactive features in the ebook did better on the post-tests and reported higher confidence in their ability to teach the material than teachers who used few of the interactive features.","cites":"2","conferencePercentile":"79.62962963"},{"venue":"WiPSCE","id":"afdc346c093768a50fd75cbeddb1218f010fe790","venue_1":"WiPSCE","year":"2016","title":"Teacher Feedback on Delivering Computational Thinking in Primary School","authors":"Timothy C. Bell, Caitlin Duncan, James Atlas","author_ids":"2628576, 3257328, 2645544","abstract":"We report on the preliminary results of an ongoing study examining the teaching of new primary school topics based on Computational Thinking in New Zealand. We analyse detailed feedback from 13 teachers participating in the study, who had little or no previous experience teaching computer science and related topics. From this we extract key themes identified by the teachers that are likely to be encountered deploying a new curriculum, including unexpected opportunities for cross-curricula learning, development of social skills, and engaging a wide range of students.","cites":"0","conferencePercentile":"50"},{"venue":"WiPSCE","id":"c822eb1c94079a90578d1f948d06a3a5e8e64784","venue_1":"WiPSCE","year":"2014","title":"A game to teach network communication reliability problems and solutions","authors":"Sam Jarman, Timothy C. Bell","author_ids":"2121647, 2628576","abstract":"After the recent introduction of Computer Science into New Zealand High Schools, a lack of coherent resources for the new topics has created challenges for teachers and students working with the new qualifications. In response to this, a \"Computer Science Field Guide\" has been developed, which provides an on-line open-source \"text book\" that contains chapters with rich content that covers each topic required, each including videos, games and interactive applications. The Network Communication Protocols topic has been particularly difficult to cover because it is focuses on the key concepts in protocols, whereas most teaching material available is about using protocols rather than creating them. Also, the field guide takes a constructivist approach, and there is little material available that approaches the topic this way. This paper presents the research and development of a new interactive game for teaching Network Communication Protocols. <i>Packet Attack</i> is designed to teach key concepts around communication reliability problems and their solutions with respect to the transmission control protocol. The game has a novel approach of letting the user become the problem (unreliability of transmission) to try to prevent messages getting through, rather than them trying to solve the issues.","cites":"0","conferencePercentile":"15.51724138"},{"venue":"WiPSCE","id":"2673a3614b4239f1a62fc577922f0db7ec2b8c27","venue_1":"WiPSCE","year":"2013","title":"Evaluation of games for teaching computer science","authors":"Ben Gibson, Timothy C. Bell","author_ids":"2941912, 2628576","abstract":"Well-designed educational games (both online and offline) can be a valuable way to engage students with a topic. However, games can also be a time-consuming distraction, so it is useful to be able to identify which are suitable. This paper provides guidelines for evaluating games, and applies them to identify promising games. We begin by defining what is meant by a game, ruling out simple animations or quizzes, and focusing on a more playful approach to education. Based on this definition, we have identified games that are available for teaching topics in computer science, and classified them. We have developed criteria for evaluating games based on existing research on educational games, combined with educational theory and considering them in the context of CS. The criteria developed cover the topics taught, how easy it is to install and run, how engaging the game is, and how much time students might invest to use the game. We find that although there are a number of worth-while games in the field of CS and most are free, the coverage of topics is very patchy, with most focused on programming concepts and binary numbers.","cites":"5","conferencePercentile":"98.21428571"},{"venue":"WiPSCE","id":"a87db40686825b38f873018216718b5d2665ae5c","venue_1":"WiPSCE","year":"2015","title":"Constructionist Gaming Beyond the Screen: Middle School Students' Crafting and Computing of Touchpads, Board Games, and Controllers","authors":"Yasmin B. Kafai, Veena Vasudevan","author_ids":"1726545, 2612389","abstract":"Approaches to constructionist gaming---students making their own games for learning through programming---have mostly focused on screen designs. Hybrid crafting approaches that integrate crafts with digital components can extend game making beyond the screen and provide new opportunities for learning about computational concepts, skills, and perspectives. In this paper, we report on a series of workshops with middle school students (ages 11-14 years) who used Makey Makey, Play Doh, textiles and other materials to craft touchpads, augmented board games, and wearable controllers for their Scratch games. We examined students' approaches to computing and crafting in their onscreen and off screen designs. We discuss in which ways constructionist gaming can benefit from extending their designs into the physical world and what moving constructionist gaming beyond the screen has to offer for K-12 programming instruction.","cites":"1","conferencePercentile":"55.55555556"},{"venue":"WiPSCE","id":"41def25e7c0595e649922c37f8b1adbbf4eea7d8","venue_1":"WiPSCE","year":"2012","title":"InfoSphere: an extracurricular learning environment for computer science","authors":"Nadine Bergner, Jan Holz, Ulrik Schroeder","author_ids":"2962959, 2056124, 1732717","abstract":"This paper describes one of our measures to raise students' interest for Computer Science (CS) and to provide them with a realistic idea of the field. We outline the underlying concepts and theories of InfoSphere -- the extracurricular learning environment for CS at RWTH Aachen University. After explaining the theoretical, organizational, and infrastructural foundations, we provide an overview over the didactical concept of our 13 different CS workshops for school students of different ages. Furthermore, we introduce the benefits of InfoSphere for our three different target groups: school students, university students in teacher training, and active CS teachers. Finally, we present first results from our ongoing evaluation of the school students' perception of the field of CS before and after visiting one of the InfoSphere workshops.","cites":"2","conferencePercentile":"64.51612903"},{"venue":"WiPSCE","id":"58bfca555ec4a82b7879e65c4fa1de4c134a99e4","venue_1":"WiPSCE","year":"2016","title":"Identification of the Emergent Leaders within a CSE Professional Development Program","authors":"Tracie Evans Reding, Brian Dorn, Neal Grandgenett, Harvey P. Siy, Jon Youn, Quiming Zhu, Carol Engelmann","author_ids":"7696590, 1709063, 2127670, 3204630, 2752230, 7703077, 7364518","abstract":"The need for high quality, sustainable Computer Science Education (CSE) professional development (PD) at the grades K-12 level is essential to the success of the global CSE initiatives. This study investigates the use of Social Network Analysis (SNA) to identify emergent teacher leaders within a high quality CSE PD program. The CSE PD program was designed and implemented through collaboration between the computer science and teacher education units at a Midwestern metropolitan university in North America. A unique feature of this specific program is in the intentional development of a social network. This study discusses the importance of social networks, the development of social capital, and its impact on the sustainability of the goals of the CSE PD program. The role of emergent teacher leaders in the development of the social capital of the CSE PD cohort is investigated using SNA techniques. The cohort consisted of 16 in-service teachers in grades 6-12 representing seven districts and four distinct content areas. The instruments used involved a questionnaire and the results of a CSE PD program online course. The findings suggest a correlation between the emergent teacher leaders, the online course results, and the overall cohort social capital. Future uses of SNA within professional development programs are also discussed.","cites":"0","conferencePercentile":"50"},{"venue":"WiPSCE","id":"935ae23f3f6624823f5b6583bded08f0dca59d18","venue_1":"WiPSCE","year":"2016","title":"Thanks for Sharing: CS Pedagogical Content Knowledge Sharing in Online Environments","authors":"Susannah Go, Brian Dorn","author_ids":"1906835, 1709063","abstract":"Programs such as CS10K and CS for All in the United States seek to increase the number of CS teachers and provide training to them, highlighting the need to understand how best to support teachers at disadvantaged schools. Compared with teachers at larger or more affluent schools, they are less likely to gain CS pedagogical content knowledge (PCK) through methods such as face to face conversations, attending conferences, or observing a colleague's class. However CS PCK is necessary for successful teaching and learning, and research has shown that teachers want opportunities to engage in reflective practice with peers. Thus teachers at underserved or isolated schools must rely on other methods to discuss and share CS PCK. We explore this problem by examining the current landscape of online resources used for this purpose. Data was collected from two online communication fora---one with lightly moderated content devoted to general CS education matters, and one with highly curated content devoted entirely to CS PCK. We analyze the strengths and weaknesses of both fora, and synthesize our results by examining design recommendations for an online CS PCK resource that would capture the benefits of both environments.","cites":"0","conferencePercentile":"50"},{"venue":"WiPSCE","id":"86be7f8b0d2269cf8fcbe44f2ff489dbffb37a53","venue_1":"WiPSCE","year":"2014","title":"Programming in the wild: trends in youth computational participation in the online scratch community","authors":"Deborah A. Fields, Michael T. Giang, Yasmin B. Kafai","author_ids":"2910366, 2576129, 1726545","abstract":"Most research in primary and secondary computing education has focused on understanding learners within formal classroom communities, leaving aside the growing number of promising informal online programming communities where young learners contribute, comment, and collaborate on programs. In this paper, we examined trends in computational participation in Scratch, an online community with over 1 million registered youth designers primarily 11-18 years of age. Drawing on a random sample of 5,000 youth programmers and their activities over three months in early 2012, we examined the quantity of programming concepts used in projects in relation to level of participation, gender, and account age of Scratch programmers. Latent class analyses revealed four unique groups of programmers. While there was no significant link between level of online participation, ranging from low to high, and level of programming sophistication, the exception was a small group of highly engaged users who were most likely to use more complex programming concepts. Groups who only used few of the more sophisticated programming concepts, such as Booleans, variables and operators, were identified as Scratch users new to the site and girls. In the discussion we address the challenges of analyzing young learners' programming in informal online communities and opportunities for designing more equitable computational participation.","cites":"12","conferencePercentile":"100"}]}