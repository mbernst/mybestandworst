{"Workshop_on_Deductive_Databases":[{"venue":"Workshop on Deductive Databases and Logic Programming","id":"0fe6bd94b08b4098a481c5a06c3302739752f145","venue_1":"Workshop on Deductive Databases and Logic Programming","year":"1994","title":"Dynamic Argument Reduction for In-memory Data Queries","authors":"Prasad Rao, I. V. Ramakrishnan, Theresa Swift, David Scott Warren","author_ids":"1919854, 1762197, 2317033, 2678443","abstract":"Recently tuple-at-a-time evaluation strategies have begun receiving renewed attention for in-memory data queries, due to the existence of eecient techniques for their implementation. One such technique, the SLG-WAM, forms the basis of the XSB systemm9]; performance tests indicate it to be an order of magnitude faster than current deductive databases for a wide range of in-memory queries. The SLG-WAM is based on SLG resolution 5], 4], a resolution method which uses tabling to evaluate normal logic programs 1. For any tabling method, be it SLG or Magic, access to tabled subgoals and to their answers is critical for eeciency. Concern with this access time has led to optimization techniques, such as those for removing ground arguments from recursive rules. This paper presents table access methods, which combined with the backtracking of the SLG-WAM's tuple-at-a-time evaluation, allow dynamic reductions in the arguments of inferred predicates at an almost imperceptible cost compared to static methods. These access methods are based on representing tabled calls and returns as tries. While tries are a well-known data structure, they have properties of use to tabling methods beyond dynamic argument reduction. Using a trie, the existence of a term in a table can be determined in the same pass that the term is copied into the table. This paper describes the implementation of the new access methods, and of dynamic argument reduction, and provides performance results that validate their use in XSB. 1 The Table Access Problem Deductive database systems typically use both top-down and bottom-up mechanisms to evaluate queries written in a logical language. In magic evaluation, which is set-at-a-time, the top-down component is an analysis step which transforms a program so that it can be executed by a bottom-up engine in a goal directed manner. Some magic-based systems, 8] and 6], also provide a top-down execution mode (pipelining) which can interact with bottom-up evaluations. Deductive database systems can also be built upon tuple-at-a-time evaluation methods, such as SLG 5]. SLG allows resolution of subgoals either by program clauses, providing a top-down component, or by answer clauses from a table, providing a bottom-up component. Recent performance evaluation of SLG 1 The present implementation of the SLG-WAM is restricted to modularly stratiied programs.","cites":"7","conferencePercentile":"87.5"},{"venue":"Workshop on Deductive Databases and Logic Programming","id":"4c1c3ef293c75dec6fd2f08da0d4a47c25c777b2","venue_1":"Workshop on Deductive Databases and Logic Programming","year":"1994","title":"Determining Correct View Update Translations via Query Containment","authors":"Anthony Tomasic","author_ids":"1693125","abstract":"Given an intensional database (IDB) and an extension database (EDB), the view update problem translates updates on the IDB into updates on the EDB. One approach to the view update problem uses a translation langauge to specify the meaning of a view update. In this paper we prove properties of a translation language. This approach to the view update problem studies the expressive power of the translation language and the computational cost of demonstrating properties of a translation. We use an active rule based database language for specifying translations of view updates. This paper uses the containment of one datalog program (or conjunctive query) by another to demonstrate that a translation is semantically correct. We show that the complexity of correctness is lower for insertion than deletion. Finally, we discuss extensions to the translation language.","cites":"4","conferencePercentile":"75"}]}