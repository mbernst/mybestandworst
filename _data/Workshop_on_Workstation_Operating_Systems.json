{"Workshop_on_Workstation_Operati":[{"venue":"Workshop on Workstation Operating Systems","id":"87b2a043e303b67e4cc0b4448177eb075d373d6b","venue_1":"Workshop on Workstation Operating Systems","year":"1993","title":"User Interface Issues in Mobile Computing","authors":"James A. Landay, Todd R. Kaufmann","author_ids":"1708404, 2110801","abstract":"The age of mobile computing with small portable computers is upon us. However, systems researchers continue to focus on transferring their workstation environments to these machines rather than studying what tasks more typical users wish to perform. Furthermore, we argue that even in the unlikely event that these tasks are the same as those performed by researchers on their workstations, desktop environments and applications may still be inappropriate for the wide range of mobile devices that will be marketed. To explore this area, we have built a mobile computing device along with a user interface system that attempts to address some of these issues.","cites":"41","conferencePercentile":"76.92307692"},{"venue":"Workshop on Workstation Operating Systems","id":"f87c8d18d91b833dda4ba854f911c74b2555018c","venue_1":"Workshop on Workstation Operating Systems","year":"1993","title":"Operating System Implications of Solid-State Mobile Computers","authors":"Ramón Cáceres, Fred Douglis, Kai Li, Brian Marsh","author_ids":"2540940, 1782350, 2359779, 6903632","abstract":"Trends in storage technology indicate that future notebook, palmtop, and smaller mobile computers will contain battery-backed DRAM as primary storage and direct-mapped ash memory as secondary storage, but no disk. All storage will ooer uniform, random-access read times through a single-level 64-bit address space. This paper explores the operating system implications of this storage organization. The system should exploit the beneets of having all data reside in fast memory. It can do away with much of the data duplication and related data movement that take place in conventional organizations. The system also needs to hide the limitations of ash memory: write access times higher than read access times, the need to erase memory before rewriting it, and a limited number of write cycles in the lifetime of the device. It needs to limit write traac to ash memory and avoid writing repeatedly to the same area of ash memory. These steps will increase performance, improve space utilization, and prolong the life of ash memory.","cites":"24","conferencePercentile":"61.53846154"},{"venue":"Workshop on Workstation Operating Systems","id":"0a13e7e853e3d286208569a60f1a0e448c578e50","venue_1":"Workshop on Workstation Operating Systems","year":"1993","title":"Processor Capacity Reserves: An Abstraction for Managing Processor Usage","authors":"Clifford W. Mercer, Stefan Savage, Hideyuki Tokuda","author_ids":"1777363, 1727599, 1700496","abstract":"1. Motivation Multimedia applications require operating systems that support time-constrained data types such as digital audio and video. These continuous media [1] demand timely service from the system, and time-sharing scheduling algorithms are not sufficient. Furthermore, simple fixed priority scheduling, used in many hard real-time systems, does not necessarily guarantee the successful execution of arbitrary collections of programs which may have conflicting timing requirements or which may overload the system [7]. We have designed and implemented a processor capacity reservation mechanism to allow programs to reserve the capacity they need to run. Enforcement of reservations provides a scheduling firewall to protect programs from competition for the processor; this is similar to the firewall provided by memory protection, which isolates programs from outside interference in their address spaces. Using reservation, a system can control processor capacity allocation in the same way that it controls discrete resources like memory or storage space, and this prevents over-committing the processor. Our reservation mechanism depends on a scheduling framework where each reservation is expressed as a rate of progress (defined as computation time per period of real time). A rate can be associated with non-periodic programs as well as periodic programs. An admission control policy, based on rate monotonic scheduling theory [5, 6], moderates access to processor resources. An enforcement mechanism ensures that the reserved computation is limited to the requested rate and does not interfere with other activities. The reservation mechanism measures the processor usage of each reserved program and even includes in that measurement any computation time consumed by servers invoked on that program's behalf. A detailed description of the scheduling framework, the admission control policy, and the enforcement mechanism appears elsewhere [7]. Supporting multimedia applications is our primary goal in this work. Many multimedia systems assume that this kind of processor reservation functionality is available [1, 2], but previous reservation systems typically use extended time-sharing algorithms which attempt to match long-term utilization with preset reservation values [3, 4]. These systems do not have the accurate usage measurement and control required by low-latency multimedia applications. A reservation mechanism like ours is also useful in other application areas. Multiprocessor systems can use reservations to interleave parallel programs on a collection of processors. The accurate processor","cites":"38","conferencePercentile":"69.23076923"},{"venue":"Workshop on Workstation Operating Systems","id":"efeed0867bf4b672fe941b9b5df5b4893e744d42","venue_1":"Workshop on Workstation Operating Systems","year":"1993","title":"The Need for Customizable Operating Systems","authors":"Gregor Kiczales, John Lamping, Chris Maeda, David Keppel, Dylan McNamee","author_ids":"2365209, 2905809, 2998213, 2210049, 2817614","abstract":"This material is posted here with permission of the IEEE. Such permission of the IEEE does not in any way imply IEEE endorsement of any of Xerox's products or services. Internal or personal use of this material is permitted. However, permission to reprint/republish this material for advertising or promotional purposes or for creating new collective works for resale or redistribution must be obtained from the IEEE by sending a blank email message to info.pub.permission@ieee.org. By choosing to view this document, you agree to all provisions of the copyright laws protecting it.","cites":"19","conferencePercentile":"53.84615385"}]}