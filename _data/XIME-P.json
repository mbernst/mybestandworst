{"XIME-P.csv":[{"venue":"XIME-P","id":"228c6e8e20ce4db7a9fbefb4e0104ba59d7b2acd","venue_1":"XIME-P","year":"2005","title":"Deep Set Operators for XQuery","authors":"Bo Luo, Dongwon Lee, Wang-Chien Lee, Peng Liu","author_ids":"1757428, 1784227, 1686360, 1687769","abstract":"There are three set operators defined in XQuery, namely union, intersect and except. They take node sequences as operands, in which each node is identified by its node-ID and treated as an atomic entity. However, according to XML semantics, each node is \" a set of set(s) \" , which have descendants in a tree-structured hierarchy. Unfortunately, the regular set operators as described above ignored this structural feature of XML data. On the other hand, some XML applications can be benefited from set operators with different semantics considering ancestor-descendant relationships between nodes. In this extended semantics, the comparison during query processing are conducted not only on nodes of both operands, but also on their descendants, in a \" deep \" manner. In this paper, we identify the needs of such \" deep \" set operators and propose the deep-union, deep-intersect and deep-except operators. We further explore their properties as well as relationships to regular set operators, and present a preliminary experience on implementing them as user-defined functions of XQuery.","cites":"8","conferencePercentile":"63.63636364"}]}