{"ZB.csv":[{"venue":"ZB","id":"a8b2803419b9069caa7644804e7ce6398834c8db","venue_1":"ZB","year":"2002","title":"Incremental Proof of the Producer/Consumer Property for the PCI Protocol","authors":"Dominique Cansell, Ganesh Gopalakrishnan, Michael D. Jones, Dominique MÃ©ry, Airy Weinzoepflen","author_ids":"1784461, 1724910, 2481145, 1706221, 2716291","abstract":"We present an incremental proof of the producer/consumer property for the PCI protocol. In the incremental proof, a corrected model of the multi-bus PCI 2.1 protocol is shown to be a refinement of the producer/consumer property. Multi-bus PCI must be corrected because the original PCI specification violates the producer/consumer property. The final model of PCI includes transaction types and reordering along with the completion mechanism for delayed PCI transactions. Verification results include multiple concurrent sessions of the pro-ducer/consumer property in a family of topologically isomorphic network configurations. The remaining configurations are identified and left for future work. In contrast to previous case studies involving this problem [13, 15], the incremen-tal proof provides structure which simplifies otherwise difficult monolithic proof attempts.","cites":"13","conferencePercentile":"50"},{"venue":"ZB","id":"7d79b7a487549a455e5c84535d5263e4a358c42a","venue_1":"ZB","year":"2000","title":"A Formal Architecture for the 3APL Agent Programming Language","authors":"Mark d'Inverno, Koen V. Hindriks, Michael Luck","author_ids":"7564055, 1751831, 1721762","abstract":"The notion of agents has provided a way of imbuing traditional computing systems with an extra degree of flexibility that allows them to be more resilient and robust in the face of more varied and unpredictable forms of interaction. One class of agents, typically called intelligent agents, represent their world symbolically according to their beliefs, have goals which need to be achieved, and adopt plans or intentions to achieve them. Now, one approach to building agents is to design a programming language whose semantics are based on some theory of rational or intentional agency and to program the desired behaviour of individual agents directly using mental attitudes. Such a technique is referred to as agent oriented programming. Arguably, the most innovative of these languages is 3APL (pronounced \" triple-a-p-l \") which supports the construction of intelligent agents for the development of complex systems through a set of intuitive concepts like beliefs, goals and plans. In this paper, we provide a Z specification of the programming language 3APL which provides a basis for implementation and also adds to a growing library of agent techniques and features.","cites":"10","conferencePercentile":"71.42857143"}]}