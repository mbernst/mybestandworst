{"ZUM.csv":[{"venue":"ZUM","id":"d49f78b390e1a2b4f4a8fc416794a41cdcc6756a","venue_1":"ZUM","year":"1998","title":"Formal Derivation of Finite State Machines for Class Testing","authors":"Leesa Murray, David A. Carrington, Ian MacColl, Jason McDonald, Paul A. Strooper","author_ids":"3123190, 1684054, 1764309, 2836640, 1700591","abstract":"Previous work on generating state machines for the purpose of class testing has not been formally based. There has also been work on deriving state machines from formal speciications for testing non-object-oriented software. We build on this work by presenting a method for deriving a state machine for testing purposes from a formal speciication of the class under test. We also show how the resulting state machine can be used as the basis for a test suite developed and executed using an existing framework for class testing. To derive the state machine, we identify the states and possible interactions of the operations of the class under test. The Test Template Framework is used to formally derive the states from the Object-Z spec-iication of the class under test. The transitions of the nite state machine are calculated from the derived states and the class's operations. The formally derived nite state machine is transformed to a ClassBench testgraph, which is used as input to the ClassBench framework to test a C++ implementation of the class. The method is illustrated using a simple bounded queue example.","cites":"25","conferencePercentile":"100"},{"venue":"ZUM","id":"bfc7168930ea295d97bd3f76a7d27eb33fb99ae8","venue_1":"ZUM","year":"1998","title":"Visualizing Z Notation in HTML Documents","authors":"Paolo Ciancarini, Cecilia Mascolo, Fabio Vitali","author_ids":"1730029, 1733840, 1737427","abstract":"The use of the WWW as a communication medium for software engineers is limited by the lack of tools for writing, sharing, and verifying formal notations. For instance, the Z speciication language has a a rich set of mathematical characters, and requires graphic-rich boxes and schemas for its speciications. It is diicult to integrate Z specii-cations and text on WWW pages written with the current versions of HTML, and traditional tools are not suited for the task. We present a Java-based tool for rendering Z speciications within HTML documents that can be shown on every WWW browser with Java capabilities. Being a complete rendering engine, text parts and Z speciications can be freely intermixed, and all the standard features of HTML (such as links, etc.) are available outside and inside Z speciications. Furthermore , the extensibility of our engine allows additional notations to be supported and integrated with current ones.","cites":"6","conferencePercentile":"40"},{"venue":"ZUM","id":"230f767d212a2aa175f140ce748ebce144e71501","venue_1":"ZUM","year":"1997","title":"A Z Specification of the Soft-Link Hypertext Model","authors":"Mark d'Inverno, Michael J. Hu","author_ids":"7564055, 2462255","abstract":"This paper provides a formal speciication in Z of a new intelligent hypertext model called the soft-link hypertext model (SLHM). This model has been implemented and extensively tested, and provides a new methodology for constructing the future generation of information retrieval systems. Its core is the adoption of a data structure called the conceptual index, which allows hypertext structure to be built automatically upon conventional Boolean systems. The functionality of resulting systems using this approach is then extended from Boolean search to more sophisticated information retrieval applications, including asso-ciative searches and information browsing. Compared with other similar projects, SLHM has the following three major advantages. First, the conceptual index is automatically formulated. Second, powerful neural learning mechanisms are applied to the conceptual index, thereby improving its eeciency and applicability. Third, machine intelligence installed on the conceptual index can be utilised for online assistance during navigating and information browsing. This speciication has been developed by application of an existing formal framework for specifying hypertext systems. The speciication presented here provides: a formal account of the state and operations of this new model; a sound basis for instantiations of the model to be built; a case study in the application of an existing formal framework; and an environment in which further reenements of new learning and hypertext strategies can be presented and evaluated.","cites":"6","conferencePercentile":"50"},{"venue":"ZUM","id":"785cd2e72049ec6f82fa1393143bed6055bf6e65","venue_1":"ZUM","year":"1997","title":"Analyzing and Refining an Architectural Style","authors":"Paolo Ciancarini, Cecilia Mascolo","author_ids":"1730029, 1733840","abstract":"Architectural styles have been introduced in 1] in order to classify and analyze software architectures. In that paper, Z was used as a notation to specify and study architectural styles, however some problems remained open concerning speciication and analysis of their behavioral properties. We use a new operational semantics to describe and analyze an architectural style of distributed systems. We introduce three reenements of a \\Message Router\" style, useful to describe distributed applications like e-mail or news systems; we also formalize and prove some properties of the style and, henceforth, of derived software architectures.","cites":"2","conferencePercentile":"33.33333333"},{"venue":"ZUM","id":"126e0237897e8a1a2a7b4732a6f17467705589b8","venue_1":"ZUM","year":"1995","title":"Structuring a Z Specification to Provide a Formal Framework for Autonomous Agent Systems","authors":"Michael Luck, Mark d'Inverno","author_ids":"1721762, 7564055","abstract":"This paper describes a project which is using Z in the field of artificial intelligence (AI) to provide a defining framework for agency and autonomy. Specifically, the use of Z has provided a means for escaping from the termino-logical chaos surrounding agency and autonomy that is prevalent not just in the AI community, but also in other areas of computer science. We outline how we have developed a Z specification which serves as a framework that satisfies three distinct requirements. First, a framework should be defining in the sense that it must precisely and unambiguously provide meanings for the common concepts and terms. Second, it should be designed in such a way as to enable alternative models of particular classes of system to be explicitly described, compared and evaluated. Third, the framework should be sufficiently well-structured to provide a foundation for subsequent development of increasingly more refined concepts. The state based specification language Z is accessible to researchers from a variety of different backgrounds and allows us to provide a consistent unified formal account of an abstract agent system.","cites":"18","conferencePercentile":"55.55555556"},{"venue":"ZUM","id":"093b9395f2144199c117f853d4200bd56a51c8b4","venue_1":"ZUM","year":"1995","title":"Structuring Specification in Z to Build a Unifying Framework for Hypertext Systems","authors":"Mark d'Inverno, Mark Priestley","author_ids":"7564055, 2025307","abstract":"A report is given on work undertaken to produce a struc-tured speciication in Z of a model which aims to capture the essential abstractions of hypertext systems. The speciication is presented in part and the potential value of this speciication to the hypertext community is explored and discussed. We argue that this speciication provides a framework for hypertext systems in that it provides: explicit and un-ambiguous deenitions of hypertext terms, an explicit environment for the presentation, comparison and evaluation of hypertext systems and a foundation for future research and development in the eld. Although there are many formal reference models of hypertext, we have found Z expressive enough to allow a uniied account of a system and its operations. Our model does not restrict the speciier to any particular design, but provides a mathematical framework within which diierent models may be compared. Further, we were able to structure the speciication in order that the model could be described initially at the highest level of abstraction with complexity added at increasingly lower levels of abstraction. This structured speciication allows the functionality of hyper-text systems to be considered at diierent levels of granularity which, we argue, gives rise to a well-deened robust model and a beneecial environment within which to reason about hypertext design. The use of this model in presenting and comparing existing models, as well as its use in developing a new hypertext learning model, is brieey discussed.","cites":"3","conferencePercentile":"22.22222222"}]}